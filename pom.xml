<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.1</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.stefandragomiroiu</groupId>
    <artifactId>rideshare</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>rideshare</name>
    <description>RideShare REST API</description>
    <properties>
        <java.version>17</java.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-quartz</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>am.ik.yavi</groupId>
            <artifactId>yavi</artifactId>
            <version>0.9.1</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.fusionauth</groupId>
            <artifactId>fusionauth-jwt</artifactId>
            <version>5.3.1</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>org.codehaus.mojo</groupId>-->
<!--                <artifactId>build-helper-maven-plugin</artifactId>-->
<!--                <version>3.0.0</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <phase>generate-sources</phase>-->
<!--                        <goals>-->
<!--                            <goal>add-source</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <sources>-->
<!--                                <source>target/generated-sources/jooq</source>-->
<!--                            </sources>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <executions>
                    <execution>
                        <id>generate-postgres</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- Use manual code generation and check in generated sources in version control -->
                            <skip>true</skip>
                            <jdbc>
                                <driver>org.postgresql.Driver</driver>
                                <!--suppress UnresolvedMavenProperty -->
                                <url>jdbc:postgresql://${env.PGHOST}:${env.PGPORT}/${env.PGDATABASE}</url>
                                <!--suppress UnresolvedMavenProperty -->
                                <user>${env.PGUSER}</user>
                                <!--suppress UnresolvedMavenProperty -->
                                <password>${env.PGPASSWORD}</password>
                            </jdbc>
                            <generator>
                                <database>
                                    <name>org.jooq.meta.postgres.PostgresDatabase</name>
                                    <includes>.*</includes>
                                    <excludes/>
                                    <inputSchema>public</inputSchema>
                                </database>
                                <generate>
                                    <pojos>true</pojos>
                                    <javaTimeTypes>true</javaTimeTypes>
                                    <!-- Generate the DAO classes -->
                                    <daos>true</daos>
                                    <!-- Annotate DAOs (and other types) with spring annotations, such as @Repository and @Autowired
                                         for auto-wiring the Configuration instance, e.g. from Spring Boot's jOOQ starter -->
                                    <springAnnotations>true</springAnnotations>
                                    <!-- Generate Spring-specific DAOs containing @Transactional annotations -->
                                    <springDao>true</springDao>
                                </generate>
                                <target>
                                    <packageName>com.stefandragomiroiu.rideshare.jooq</packageName>
                                    <directory>src/main/java</directory>
                                </target>
                            </generator>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
