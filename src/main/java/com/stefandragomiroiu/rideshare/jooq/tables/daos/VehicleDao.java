/*
 * This file is generated by jOOQ.
 */
package com.stefandragomiroiu.rideshare.jooq.tables.daos;


import com.stefandragomiroiu.rideshare.jooq.AbstractSpringDAOImpl;
import com.stefandragomiroiu.rideshare.jooq.tables.Vehicle;
import com.stefandragomiroiu.rideshare.jooq.tables.records.VehicleRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class VehicleDao extends AbstractSpringDAOImpl<VehicleRecord, com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle, String> {

    /**
     * Create a new VehicleDao without any configuration
     */
    public VehicleDao() {
        super(Vehicle.VEHICLE, com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle.class);
    }

    /**
     * Create a new VehicleDao with an attached configuration
     */
    @Autowired
    public VehicleDao(Configuration configuration) {
        super(Vehicle.VEHICLE, com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle.class, configuration);
    }

    @Override
    public String getId(com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle object) {
        return object.getPlateNumber();
    }

    /**
     * Fetch records that have <code>plate_number BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle> fetchRangeOfPlateNumber(String lowerInclusive, String upperInclusive) {
        return fetchRange(Vehicle.VEHICLE.PLATE_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>plate_number IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle> fetchByPlateNumber(String... values) {
        return fetch(Vehicle.VEHICLE.PLATE_NUMBER, values);
    }

    /**
     * Fetch a unique record that has <code>plate_number = value</code>
     */
    public com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle fetchOneByPlateNumber(String value) {
        return fetchOne(Vehicle.VEHICLE.PLATE_NUMBER, value);
    }

    /**
     * Fetch a unique record that has <code>plate_number = value</code>
     */
    public Optional<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle> fetchOptionalByPlateNumber(String value) {
        return fetchOptional(Vehicle.VEHICLE.PLATE_NUMBER, value);
    }

    /**
     * Fetch records that have <code>brand BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle> fetchRangeOfBrand(String lowerInclusive, String upperInclusive) {
        return fetchRange(Vehicle.VEHICLE.BRAND, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>brand IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle> fetchByBrand(String... values) {
        return fetch(Vehicle.VEHICLE.BRAND, values);
    }

    /**
     * Fetch records that have <code>model BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle> fetchRangeOfModel(String lowerInclusive, String upperInclusive) {
        return fetchRange(Vehicle.VEHICLE.MODEL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>model IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle> fetchByModel(String... values) {
        return fetch(Vehicle.VEHICLE.MODEL, values);
    }

    /**
     * Fetch records that have <code>color BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle> fetchRangeOfColor(String lowerInclusive, String upperInclusive) {
        return fetchRange(Vehicle.VEHICLE.COLOR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>color IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle> fetchByColor(String... values) {
        return fetch(Vehicle.VEHICLE.COLOR, values);
    }

    /**
     * Fetch records that have <code>registration_year BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle> fetchRangeOfRegistrationYear(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Vehicle.VEHICLE.REGISTRATION_YEAR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>registration_year IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle> fetchByRegistrationYear(Integer... values) {
        return fetch(Vehicle.VEHICLE.REGISTRATION_YEAR, values);
    }

    /**
     * Fetch records that have <code>seats BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle> fetchRangeOfSeats(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Vehicle.VEHICLE.SEATS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>seats IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle> fetchBySeats(Integer... values) {
        return fetch(Vehicle.VEHICLE.SEATS, values);
    }

    /**
     * Fetch records that have <code>owner BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle> fetchRangeOfOwner(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Vehicle.VEHICLE.OWNER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>owner IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle> fetchByOwner(Long... values) {
        return fetch(Vehicle.VEHICLE.OWNER, values);
    }

    /**
     * Fetch records that have <code>image BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle> fetchRangeOfImage(String lowerInclusive, String upperInclusive) {
        return fetchRange(Vehicle.VEHICLE.IMAGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>image IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Vehicle> fetchByImage(String... values) {
        return fetch(Vehicle.VEHICLE.IMAGE, values);
    }
}
