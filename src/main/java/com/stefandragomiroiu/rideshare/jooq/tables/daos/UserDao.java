/*
 * This file is generated by jOOQ.
 */
package com.stefandragomiroiu.rideshare.jooq.tables.daos;


import com.stefandragomiroiu.rideshare.jooq.AbstractSpringDAOImpl;
import com.stefandragomiroiu.rideshare.jooq.enums.Role;
import com.stefandragomiroiu.rideshare.jooq.tables.User;
import com.stefandragomiroiu.rideshare.jooq.tables.records.UserRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class UserDao extends AbstractSpringDAOImpl<UserRecord, com.stefandragomiroiu.rideshare.jooq.tables.pojos.User, Long> {

    /**
     * Create a new UserDao without any configuration
     */
    public UserDao() {
        super(User.USER, com.stefandragomiroiu.rideshare.jooq.tables.pojos.User.class);
    }

    /**
     * Create a new UserDao with an attached configuration
     */
    @Autowired
    public UserDao(Configuration configuration) {
        super(User.USER, com.stefandragomiroiu.rideshare.jooq.tables.pojos.User.class, configuration);
    }

    @Override
    public Long getId(com.stefandragomiroiu.rideshare.jooq.tables.pojos.User object) {
        return object.getUserId();
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(User.USER.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchByUserId(Long... values) {
        return fetch(User.USER.USER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>user_id = value</code>
     */
    public com.stefandragomiroiu.rideshare.jooq.tables.pojos.User fetchOneByUserId(Long value) {
        return fetchOne(User.USER.USER_ID, value);
    }

    /**
     * Fetch a unique record that has <code>user_id = value</code>
     */
    public Optional<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchOptionalByUserId(Long value) {
        return fetchOptional(User.USER.USER_ID, value);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchByEmail(String... values) {
        return fetch(User.USER.EMAIL, values);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public com.stefandragomiroiu.rideshare.jooq.tables.pojos.User fetchOneByEmail(String value) {
        return fetchOne(User.USER.EMAIL, value);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public Optional<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchOptionalByEmail(String value) {
        return fetchOptional(User.USER.EMAIL, value);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchRangeOfPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchByPassword(String... values) {
        return fetch(User.USER.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>first_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchRangeOfFirstName(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.FIRST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchByFirstName(String... values) {
        return fetch(User.USER.FIRST_NAME, values);
    }

    /**
     * Fetch records that have <code>last_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchRangeOfLastName(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.LAST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_name IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchByLastName(String... values) {
        return fetch(User.USER.LAST_NAME, values);
    }

    /**
     * Fetch records that have <code>phone_number BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchRangeOfPhoneNumber(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.PHONE_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>phone_number IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchByPhoneNumber(String... values) {
        return fetch(User.USER.PHONE_NUMBER, values);
    }

    /**
     * Fetch records that have <code>birth_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchRangeOfBirthDate(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(User.USER.BIRTH_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>birth_date IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchByBirthDate(LocalDate... values) {
        return fetch(User.USER.BIRTH_DATE, values);
    }

    /**
     * Fetch records that have <code>profile_picture BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchRangeOfProfilePicture(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.PROFILE_PICTURE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>profile_picture IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchByProfilePicture(String... values) {
        return fetch(User.USER.PROFILE_PICTURE, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchRangeOfCreatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(User.USER.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchByCreatedOn(LocalDateTime... values) {
        return fetch(User.USER.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>last_login BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchRangeOfLastLogin(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(User.USER.LAST_LOGIN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_login IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchByLastLogin(LocalDateTime... values) {
        return fetch(User.USER.LAST_LOGIN, values);
    }

    /**
     * Fetch records that have <code>role BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchRangeOfRole(Role lowerInclusive, Role upperInclusive) {
        return fetchRange(User.USER.ROLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.User> fetchByRole(Role... values) {
        return fetch(User.USER.ROLE, values);
    }
}
