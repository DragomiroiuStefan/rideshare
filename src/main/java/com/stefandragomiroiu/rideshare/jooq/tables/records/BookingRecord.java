/*
 * This file is generated by jOOQ.
 */
package com.stefandragomiroiu.rideshare.jooq.tables.records;


import com.stefandragomiroiu.rideshare.jooq.tables.Booking;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class BookingRecord extends UpdatableRecordImpl<BookingRecord> implements Record6<Long, Long, Integer, Integer, Boolean, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.booking.booking_id</code>.
     */
    public void setBookingId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.booking.booking_id</code>.
     */
    public Long getBookingId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.booking.user_id</code>.
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.booking.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.booking.adults</code>.
     */
    public void setAdults(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.booking.adults</code>.
     */
    public Integer getAdults() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.booking.children</code>.
     */
    public void setChildren(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.booking.children</code>.
     */
    public Integer getChildren() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.booking.confirmed</code>.
     */
    public void setConfirmed(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.booking.confirmed</code>.
     */
    public Boolean getConfirmed() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.booking.booked_at</code>.
     */
    public void setBookedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.booking.booked_at</code>.
     */
    public LocalDateTime getBookedAt() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, Integer, Integer, Boolean, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Long, Integer, Integer, Boolean, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Booking.BOOKING.BOOKING_ID;
    }

    @Override
    public Field<Long> field2() {
        return Booking.BOOKING.USER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Booking.BOOKING.ADULTS;
    }

    @Override
    public Field<Integer> field4() {
        return Booking.BOOKING.CHILDREN;
    }

    @Override
    public Field<Boolean> field5() {
        return Booking.BOOKING.CONFIRMED;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Booking.BOOKING.BOOKED_AT;
    }

    @Override
    public Long component1() {
        return getBookingId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public Integer component3() {
        return getAdults();
    }

    @Override
    public Integer component4() {
        return getChildren();
    }

    @Override
    public Boolean component5() {
        return getConfirmed();
    }

    @Override
    public LocalDateTime component6() {
        return getBookedAt();
    }

    @Override
    public Long value1() {
        return getBookingId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public Integer value3() {
        return getAdults();
    }

    @Override
    public Integer value4() {
        return getChildren();
    }

    @Override
    public Boolean value5() {
        return getConfirmed();
    }

    @Override
    public LocalDateTime value6() {
        return getBookedAt();
    }

    @Override
    public BookingRecord value1(Long value) {
        setBookingId(value);
        return this;
    }

    @Override
    public BookingRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public BookingRecord value3(Integer value) {
        setAdults(value);
        return this;
    }

    @Override
    public BookingRecord value4(Integer value) {
        setChildren(value);
        return this;
    }

    @Override
    public BookingRecord value5(Boolean value) {
        setConfirmed(value);
        return this;
    }

    @Override
    public BookingRecord value6(LocalDateTime value) {
        setBookedAt(value);
        return this;
    }

    @Override
    public BookingRecord values(Long value1, Long value2, Integer value3, Integer value4, Boolean value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookingRecord
     */
    public BookingRecord() {
        super(Booking.BOOKING);
    }

    /**
     * Create a detached, initialised BookingRecord
     */
    public BookingRecord(Long bookingId, Long userId, Integer adults, Integer children, Boolean confirmed, LocalDateTime bookedAt) {
        super(Booking.BOOKING);

        setBookingId(bookingId);
        setUserId(userId);
        setAdults(adults);
        setChildren(children);
        setConfirmed(confirmed);
        setBookedAt(bookedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised BookingRecord
     */
    public BookingRecord(com.stefandragomiroiu.rideshare.jooq.tables.pojos.Booking value) {
        super(Booking.BOOKING);

        if (value != null) {
            setBookingId(value.getBookingId());
            setUserId(value.getUserId());
            setAdults(value.getAdults());
            setChildren(value.getChildren());
            setConfirmed(value.getConfirmed());
            setBookedAt(value.getBookedAt());
            resetChangedOnNotNull();
        }
    }
}
