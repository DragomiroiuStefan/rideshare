/*
 * This file is generated by jOOQ.
 */
package com.stefandragomiroiu.rideshare.jooq.tables.records;


import com.stefandragomiroiu.rideshare.jooq.tables.RideRating;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RideRatingRecord extends UpdatableRecordImpl<RideRatingRecord> implements Record5<Long, Long, Integer, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.ride_rating.ride_id</code>.
     */
    public void setRideId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.ride_rating.ride_id</code>.
     */
    public Long getRideId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.ride_rating.user_id</code>.
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.ride_rating.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.ride_rating.rating</code>.
     */
    public void setRating(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.ride_rating.rating</code>.
     */
    public Integer getRating() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.ride_rating.comment</code>.
     */
    public void setComment(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.ride_rating.comment</code>.
     */
    public String getComment() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.ride_rating.posted_at</code>.
     */
    public void setPostedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.ride_rating.posted_at</code>.
     */
    public LocalDateTime getPostedAt() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Integer, String, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, Integer, String, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return RideRating.RIDE_RATING.RIDE_ID;
    }

    @Override
    public Field<Long> field2() {
        return RideRating.RIDE_RATING.USER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return RideRating.RIDE_RATING.RATING;
    }

    @Override
    public Field<String> field4() {
        return RideRating.RIDE_RATING.COMMENT;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return RideRating.RIDE_RATING.POSTED_AT;
    }

    @Override
    public Long component1() {
        return getRideId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public Integer component3() {
        return getRating();
    }

    @Override
    public String component4() {
        return getComment();
    }

    @Override
    public LocalDateTime component5() {
        return getPostedAt();
    }

    @Override
    public Long value1() {
        return getRideId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public Integer value3() {
        return getRating();
    }

    @Override
    public String value4() {
        return getComment();
    }

    @Override
    public LocalDateTime value5() {
        return getPostedAt();
    }

    @Override
    public RideRatingRecord value1(Long value) {
        setRideId(value);
        return this;
    }

    @Override
    public RideRatingRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public RideRatingRecord value3(Integer value) {
        setRating(value);
        return this;
    }

    @Override
    public RideRatingRecord value4(String value) {
        setComment(value);
        return this;
    }

    @Override
    public RideRatingRecord value5(LocalDateTime value) {
        setPostedAt(value);
        return this;
    }

    @Override
    public RideRatingRecord values(Long value1, Long value2, Integer value3, String value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RideRatingRecord
     */
    public RideRatingRecord() {
        super(RideRating.RIDE_RATING);
    }

    /**
     * Create a detached, initialised RideRatingRecord
     */
    public RideRatingRecord(Long rideId, Long userId, Integer rating, String comment, LocalDateTime postedAt) {
        super(RideRating.RIDE_RATING);

        setRideId(rideId);
        setUserId(userId);
        setRating(rating);
        setComment(comment);
        setPostedAt(postedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised RideRatingRecord
     */
    public RideRatingRecord(com.stefandragomiroiu.rideshare.jooq.tables.pojos.RideRating value) {
        super(RideRating.RIDE_RATING);

        if (value != null) {
            setRideId(value.getRideId());
            setUserId(value.getUserId());
            setRating(value.getRating());
            setComment(value.getComment());
            setPostedAt(value.getPostedAt());
            resetChangedOnNotNull();
        }
    }
}
