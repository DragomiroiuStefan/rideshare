/*
 * This file is generated by jOOQ.
 */
package com.stefandragomiroiu.rideshare.jooq.tables.records;


import com.stefandragomiroiu.rideshare.jooq.tables.BookingConnection;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class BookingConnectionRecord extends UpdatableRecordImpl<BookingConnectionRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.booking_connection.booking_id</code>.
     */
    public void setBookingId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.booking_connection.booking_id</code>.
     */
    public Long getBookingId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.booking_connection.connection_id</code>.
     */
    public void setConnectionId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.booking_connection.connection_id</code>.
     */
    public Long getConnectionId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return BookingConnection.BOOKING_CONNECTION.BOOKING_ID;
    }

    @Override
    public Field<Long> field2() {
        return BookingConnection.BOOKING_CONNECTION.CONNECTION_ID;
    }

    @Override
    public Long component1() {
        return getBookingId();
    }

    @Override
    public Long component2() {
        return getConnectionId();
    }

    @Override
    public Long value1() {
        return getBookingId();
    }

    @Override
    public Long value2() {
        return getConnectionId();
    }

    @Override
    public BookingConnectionRecord value1(Long value) {
        setBookingId(value);
        return this;
    }

    @Override
    public BookingConnectionRecord value2(Long value) {
        setConnectionId(value);
        return this;
    }

    @Override
    public BookingConnectionRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookingConnectionRecord
     */
    public BookingConnectionRecord() {
        super(BookingConnection.BOOKING_CONNECTION);
    }

    /**
     * Create a detached, initialised BookingConnectionRecord
     */
    public BookingConnectionRecord(Long bookingId, Long connectionId) {
        super(BookingConnection.BOOKING_CONNECTION);

        setBookingId(bookingId);
        setConnectionId(connectionId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised BookingConnectionRecord
     */
    public BookingConnectionRecord(com.stefandragomiroiu.rideshare.jooq.tables.pojos.BookingConnection value) {
        super(BookingConnection.BOOKING_CONNECTION);

        if (value != null) {
            setBookingId(value.getBookingId());
            setConnectionId(value.getConnectionId());
            resetChangedOnNotNull();
        }
    }
}
