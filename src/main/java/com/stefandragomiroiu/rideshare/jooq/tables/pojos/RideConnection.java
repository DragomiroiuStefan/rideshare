/*
 * This file is generated by jOOQ.
 */
package com.stefandragomiroiu.rideshare.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RideConnection implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long connectionId;
    private Long departureLocation;
    private Long arrivalLocation;
    private LocalDateTime departureTime;
    private LocalDateTime arrivalTime;
    private String departureAddress;
    private String arrivalAddress;
    private Integer price;
    private Long rideId;

    public RideConnection() {}

    public RideConnection(RideConnection value) {
        this.connectionId = value.connectionId;
        this.departureLocation = value.departureLocation;
        this.arrivalLocation = value.arrivalLocation;
        this.departureTime = value.departureTime;
        this.arrivalTime = value.arrivalTime;
        this.departureAddress = value.departureAddress;
        this.arrivalAddress = value.arrivalAddress;
        this.price = value.price;
        this.rideId = value.rideId;
    }

    public RideConnection(
        Long connectionId,
        Long departureLocation,
        Long arrivalLocation,
        LocalDateTime departureTime,
        LocalDateTime arrivalTime,
        String departureAddress,
        String arrivalAddress,
        Integer price,
        Long rideId
    ) {
        this.connectionId = connectionId;
        this.departureLocation = departureLocation;
        this.arrivalLocation = arrivalLocation;
        this.departureTime = departureTime;
        this.arrivalTime = arrivalTime;
        this.departureAddress = departureAddress;
        this.arrivalAddress = arrivalAddress;
        this.price = price;
        this.rideId = rideId;
    }

    /**
     * Getter for <code>public.ride_connection.connection_id</code>.
     */
    public Long getConnectionId() {
        return this.connectionId;
    }

    /**
     * Setter for <code>public.ride_connection.connection_id</code>.
     */
    public void setConnectionId(Long connectionId) {
        this.connectionId = connectionId;
    }

    /**
     * Getter for <code>public.ride_connection.departure_location</code>.
     */
    public Long getDepartureLocation() {
        return this.departureLocation;
    }

    /**
     * Setter for <code>public.ride_connection.departure_location</code>.
     */
    public void setDepartureLocation(Long departureLocation) {
        this.departureLocation = departureLocation;
    }

    /**
     * Getter for <code>public.ride_connection.arrival_location</code>.
     */
    public Long getArrivalLocation() {
        return this.arrivalLocation;
    }

    /**
     * Setter for <code>public.ride_connection.arrival_location</code>.
     */
    public void setArrivalLocation(Long arrivalLocation) {
        this.arrivalLocation = arrivalLocation;
    }

    /**
     * Getter for <code>public.ride_connection.departure_time</code>.
     */
    public LocalDateTime getDepartureTime() {
        return this.departureTime;
    }

    /**
     * Setter for <code>public.ride_connection.departure_time</code>.
     */
    public void setDepartureTime(LocalDateTime departureTime) {
        this.departureTime = departureTime;
    }

    /**
     * Getter for <code>public.ride_connection.arrival_time</code>.
     */
    public LocalDateTime getArrivalTime() {
        return this.arrivalTime;
    }

    /**
     * Setter for <code>public.ride_connection.arrival_time</code>.
     */
    public void setArrivalTime(LocalDateTime arrivalTime) {
        this.arrivalTime = arrivalTime;
    }

    /**
     * Getter for <code>public.ride_connection.departure_address</code>.
     */
    public String getDepartureAddress() {
        return this.departureAddress;
    }

    /**
     * Setter for <code>public.ride_connection.departure_address</code>.
     */
    public void setDepartureAddress(String departureAddress) {
        this.departureAddress = departureAddress;
    }

    /**
     * Getter for <code>public.ride_connection.arrival_address</code>.
     */
    public String getArrivalAddress() {
        return this.arrivalAddress;
    }

    /**
     * Setter for <code>public.ride_connection.arrival_address</code>.
     */
    public void setArrivalAddress(String arrivalAddress) {
        this.arrivalAddress = arrivalAddress;
    }

    /**
     * Getter for <code>public.ride_connection.price</code>.
     */
    public Integer getPrice() {
        return this.price;
    }

    /**
     * Setter for <code>public.ride_connection.price</code>.
     */
    public void setPrice(Integer price) {
        this.price = price;
    }

    /**
     * Getter for <code>public.ride_connection.ride_id</code>.
     */
    public Long getRideId() {
        return this.rideId;
    }

    /**
     * Setter for <code>public.ride_connection.ride_id</code>.
     */
    public void setRideId(Long rideId) {
        this.rideId = rideId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final RideConnection other = (RideConnection) obj;
        if (this.connectionId == null) {
            if (other.connectionId != null)
                return false;
        }
        else if (!this.connectionId.equals(other.connectionId))
            return false;
        if (this.departureLocation == null) {
            if (other.departureLocation != null)
                return false;
        }
        else if (!this.departureLocation.equals(other.departureLocation))
            return false;
        if (this.arrivalLocation == null) {
            if (other.arrivalLocation != null)
                return false;
        }
        else if (!this.arrivalLocation.equals(other.arrivalLocation))
            return false;
        if (this.departureTime == null) {
            if (other.departureTime != null)
                return false;
        }
        else if (!this.departureTime.equals(other.departureTime))
            return false;
        if (this.arrivalTime == null) {
            if (other.arrivalTime != null)
                return false;
        }
        else if (!this.arrivalTime.equals(other.arrivalTime))
            return false;
        if (this.departureAddress == null) {
            if (other.departureAddress != null)
                return false;
        }
        else if (!this.departureAddress.equals(other.departureAddress))
            return false;
        if (this.arrivalAddress == null) {
            if (other.arrivalAddress != null)
                return false;
        }
        else if (!this.arrivalAddress.equals(other.arrivalAddress))
            return false;
        if (this.price == null) {
            if (other.price != null)
                return false;
        }
        else if (!this.price.equals(other.price))
            return false;
        if (this.rideId == null) {
            if (other.rideId != null)
                return false;
        }
        else if (!this.rideId.equals(other.rideId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.connectionId == null) ? 0 : this.connectionId.hashCode());
        result = prime * result + ((this.departureLocation == null) ? 0 : this.departureLocation.hashCode());
        result = prime * result + ((this.arrivalLocation == null) ? 0 : this.arrivalLocation.hashCode());
        result = prime * result + ((this.departureTime == null) ? 0 : this.departureTime.hashCode());
        result = prime * result + ((this.arrivalTime == null) ? 0 : this.arrivalTime.hashCode());
        result = prime * result + ((this.departureAddress == null) ? 0 : this.departureAddress.hashCode());
        result = prime * result + ((this.arrivalAddress == null) ? 0 : this.arrivalAddress.hashCode());
        result = prime * result + ((this.price == null) ? 0 : this.price.hashCode());
        result = prime * result + ((this.rideId == null) ? 0 : this.rideId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("RideConnection (");

        sb.append(connectionId);
        sb.append(", ").append(departureLocation);
        sb.append(", ").append(arrivalLocation);
        sb.append(", ").append(departureTime);
        sb.append(", ").append(arrivalTime);
        sb.append(", ").append(departureAddress);
        sb.append(", ").append(arrivalAddress);
        sb.append(", ").append(price);
        sb.append(", ").append(rideId);

        sb.append(")");
        return sb.toString();
    }
}
