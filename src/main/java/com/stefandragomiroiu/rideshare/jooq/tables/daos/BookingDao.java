/*
 * This file is generated by jOOQ.
 */
package com.stefandragomiroiu.rideshare.jooq.tables.daos;


import com.stefandragomiroiu.rideshare.jooq.AbstractSpringDAOImpl;
import com.stefandragomiroiu.rideshare.jooq.tables.Booking;
import com.stefandragomiroiu.rideshare.jooq.tables.records.BookingRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class BookingDao extends AbstractSpringDAOImpl<BookingRecord, com.stefandragomiroiu.rideshare.jooq.tables.pojos.Booking, Long> {

    /**
     * Create a new BookingDao without any configuration
     */
    public BookingDao() {
        super(Booking.BOOKING, com.stefandragomiroiu.rideshare.jooq.tables.pojos.Booking.class);
    }

    /**
     * Create a new BookingDao with an attached configuration
     */
    @Autowired
    public BookingDao(Configuration configuration) {
        super(Booking.BOOKING, com.stefandragomiroiu.rideshare.jooq.tables.pojos.Booking.class, configuration);
    }

    @Override
    public Long getId(com.stefandragomiroiu.rideshare.jooq.tables.pojos.Booking object) {
        return object.getBookingId();
    }

    /**
     * Fetch records that have <code>booking_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Booking> fetchRangeOfBookingId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Booking.BOOKING.BOOKING_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>booking_id IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Booking> fetchByBookingId(Long... values) {
        return fetch(Booking.BOOKING.BOOKING_ID, values);
    }

    /**
     * Fetch a unique record that has <code>booking_id = value</code>
     */
    public com.stefandragomiroiu.rideshare.jooq.tables.pojos.Booking fetchOneByBookingId(Long value) {
        return fetchOne(Booking.BOOKING.BOOKING_ID, value);
    }

    /**
     * Fetch a unique record that has <code>booking_id = value</code>
     */
    public Optional<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Booking> fetchOptionalByBookingId(Long value) {
        return fetchOptional(Booking.BOOKING.BOOKING_ID, value);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Booking> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Booking.BOOKING.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Booking> fetchByUserId(Long... values) {
        return fetch(Booking.BOOKING.USER_ID, values);
    }

    /**
     * Fetch records that have <code>adults BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Booking> fetchRangeOfAdults(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Booking.BOOKING.ADULTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>adults IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Booking> fetchByAdults(Integer... values) {
        return fetch(Booking.BOOKING.ADULTS, values);
    }

    /**
     * Fetch records that have <code>children BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Booking> fetchRangeOfChildren(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Booking.BOOKING.CHILDREN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>children IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Booking> fetchByChildren(Integer... values) {
        return fetch(Booking.BOOKING.CHILDREN, values);
    }

    /**
     * Fetch records that have <code>confirmed BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Booking> fetchRangeOfConfirmed(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Booking.BOOKING.CONFIRMED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>confirmed IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Booking> fetchByConfirmed(Boolean... values) {
        return fetch(Booking.BOOKING.CONFIRMED, values);
    }

    /**
     * Fetch records that have <code>booked_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Booking> fetchRangeOfBookedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Booking.BOOKING.BOOKED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>booked_at IN (values)</code>
     */
    public List<com.stefandragomiroiu.rideshare.jooq.tables.pojos.Booking> fetchByBookedAt(LocalDateTime... values) {
        return fetch(Booking.BOOKING.BOOKED_AT, values);
    }
}
