/*
 * This file is generated by jOOQ.
 */
package com.stefandragomiroiu.rideshare.jooq.tables.records;


import com.stefandragomiroiu.rideshare.jooq.tables.RideConnection;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RideConnectionRecord extends UpdatableRecordImpl<RideConnectionRecord> implements Record9<Long, Long, Long, LocalDateTime, LocalDateTime, String, String, Integer, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.ride_connection.connection_id</code>.
     */
    public void setConnectionId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.ride_connection.connection_id</code>.
     */
    public Long getConnectionId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.ride_connection.departure_location</code>.
     */
    public void setDepartureLocation(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.ride_connection.departure_location</code>.
     */
    public Long getDepartureLocation() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.ride_connection.arrival_location</code>.
     */
    public void setArrivalLocation(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.ride_connection.arrival_location</code>.
     */
    public Long getArrivalLocation() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.ride_connection.departure_time</code>.
     */
    public void setDepartureTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.ride_connection.departure_time</code>.
     */
    public LocalDateTime getDepartureTime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.ride_connection.arrival_time</code>.
     */
    public void setArrivalTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.ride_connection.arrival_time</code>.
     */
    public LocalDateTime getArrivalTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.ride_connection.departure_address</code>.
     */
    public void setDepartureAddress(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.ride_connection.departure_address</code>.
     */
    public String getDepartureAddress() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.ride_connection.arrival_address</code>.
     */
    public void setArrivalAddress(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.ride_connection.arrival_address</code>.
     */
    public String getArrivalAddress() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.ride_connection.price</code>.
     */
    public void setPrice(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.ride_connection.price</code>.
     */
    public Integer getPrice() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>public.ride_connection.ride_id</code>.
     */
    public void setRideId(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.ride_connection.ride_id</code>.
     */
    public Long getRideId() {
        return (Long) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Long, Long, LocalDateTime, LocalDateTime, String, String, Integer, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, Long, Long, LocalDateTime, LocalDateTime, String, String, Integer, Long> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return RideConnection.RIDE_CONNECTION.CONNECTION_ID;
    }

    @Override
    public Field<Long> field2() {
        return RideConnection.RIDE_CONNECTION.DEPARTURE_LOCATION;
    }

    @Override
    public Field<Long> field3() {
        return RideConnection.RIDE_CONNECTION.ARRIVAL_LOCATION;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return RideConnection.RIDE_CONNECTION.DEPARTURE_TIME;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return RideConnection.RIDE_CONNECTION.ARRIVAL_TIME;
    }

    @Override
    public Field<String> field6() {
        return RideConnection.RIDE_CONNECTION.DEPARTURE_ADDRESS;
    }

    @Override
    public Field<String> field7() {
        return RideConnection.RIDE_CONNECTION.ARRIVAL_ADDRESS;
    }

    @Override
    public Field<Integer> field8() {
        return RideConnection.RIDE_CONNECTION.PRICE;
    }

    @Override
    public Field<Long> field9() {
        return RideConnection.RIDE_CONNECTION.RIDE_ID;
    }

    @Override
    public Long component1() {
        return getConnectionId();
    }

    @Override
    public Long component2() {
        return getDepartureLocation();
    }

    @Override
    public Long component3() {
        return getArrivalLocation();
    }

    @Override
    public LocalDateTime component4() {
        return getDepartureTime();
    }

    @Override
    public LocalDateTime component5() {
        return getArrivalTime();
    }

    @Override
    public String component6() {
        return getDepartureAddress();
    }

    @Override
    public String component7() {
        return getArrivalAddress();
    }

    @Override
    public Integer component8() {
        return getPrice();
    }

    @Override
    public Long component9() {
        return getRideId();
    }

    @Override
    public Long value1() {
        return getConnectionId();
    }

    @Override
    public Long value2() {
        return getDepartureLocation();
    }

    @Override
    public Long value3() {
        return getArrivalLocation();
    }

    @Override
    public LocalDateTime value4() {
        return getDepartureTime();
    }

    @Override
    public LocalDateTime value5() {
        return getArrivalTime();
    }

    @Override
    public String value6() {
        return getDepartureAddress();
    }

    @Override
    public String value7() {
        return getArrivalAddress();
    }

    @Override
    public Integer value8() {
        return getPrice();
    }

    @Override
    public Long value9() {
        return getRideId();
    }

    @Override
    public RideConnectionRecord value1(Long value) {
        setConnectionId(value);
        return this;
    }

    @Override
    public RideConnectionRecord value2(Long value) {
        setDepartureLocation(value);
        return this;
    }

    @Override
    public RideConnectionRecord value3(Long value) {
        setArrivalLocation(value);
        return this;
    }

    @Override
    public RideConnectionRecord value4(LocalDateTime value) {
        setDepartureTime(value);
        return this;
    }

    @Override
    public RideConnectionRecord value5(LocalDateTime value) {
        setArrivalTime(value);
        return this;
    }

    @Override
    public RideConnectionRecord value6(String value) {
        setDepartureAddress(value);
        return this;
    }

    @Override
    public RideConnectionRecord value7(String value) {
        setArrivalAddress(value);
        return this;
    }

    @Override
    public RideConnectionRecord value8(Integer value) {
        setPrice(value);
        return this;
    }

    @Override
    public RideConnectionRecord value9(Long value) {
        setRideId(value);
        return this;
    }

    @Override
    public RideConnectionRecord values(Long value1, Long value2, Long value3, LocalDateTime value4, LocalDateTime value5, String value6, String value7, Integer value8, Long value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RideConnectionRecord
     */
    public RideConnectionRecord() {
        super(RideConnection.RIDE_CONNECTION);
    }

    /**
     * Create a detached, initialised RideConnectionRecord
     */
    public RideConnectionRecord(Long connectionId, Long departureLocation, Long arrivalLocation, LocalDateTime departureTime, LocalDateTime arrivalTime, String departureAddress, String arrivalAddress, Integer price, Long rideId) {
        super(RideConnection.RIDE_CONNECTION);

        setConnectionId(connectionId);
        setDepartureLocation(departureLocation);
        setArrivalLocation(arrivalLocation);
        setDepartureTime(departureTime);
        setArrivalTime(arrivalTime);
        setDepartureAddress(departureAddress);
        setArrivalAddress(arrivalAddress);
        setPrice(price);
        setRideId(rideId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised RideConnectionRecord
     */
    public RideConnectionRecord(com.stefandragomiroiu.rideshare.jooq.tables.pojos.RideConnection value) {
        super(RideConnection.RIDE_CONNECTION);

        if (value != null) {
            setConnectionId(value.getConnectionId());
            setDepartureLocation(value.getDepartureLocation());
            setArrivalLocation(value.getArrivalLocation());
            setDepartureTime(value.getDepartureTime());
            setArrivalTime(value.getArrivalTime());
            setDepartureAddress(value.getDepartureAddress());
            setArrivalAddress(value.getArrivalAddress());
            setPrice(value.getPrice());
            setRideId(value.getRideId());
            resetChangedOnNotNull();
        }
    }
}
